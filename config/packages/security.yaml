security:
    role_hierarchy:
        ROLE_ADMIN: [ROLE_MANAGER]
        ROLE_MANAGER: [ROLE_USER]
    encoders:
      App\Entity\User:
        algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
      db_provider:
        entity:
          class: App\Entity\User
          property: email
#      jwt_provider:
#        lexik_jwt:
#          class: App\Entity\JWTUser
#      api_key_provider:
#        id: App\Security\ApiKeyUserProvider
#      jwt_api_key_provider:
#        chain:
#          providers: [jwt_provider, api_key_provider]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\AppCustomAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
